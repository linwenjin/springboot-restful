<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.restfulapi.dao.RuleMapper" >
  <resultMap id="BaseResultMap" type="com.example.restfulapi.bean.ge.Rule" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="pid" property="pid" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="component" property="component" jdbcType="VARCHAR" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="is_show" property="isShow" jdbcType="CHAR" />
    <result column="is_leaf" property="isLeaf" jdbcType="CHAR" />
    <result column="state" property="state" jdbcType="SMALLINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, pid, path, name, component, icon, sort, is_show, is_leaf, state
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.restfulapi.bean.ge.RuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from lin_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from lin_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from lin_rule
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.restfulapi.bean.ge.RuleExample" >
    delete from lin_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.restfulapi.bean.ge.Rule" >
    insert into lin_rule (id, pid, path, 
      name, component, icon, 
      sort, is_show, is_leaf, state
      )
    values (#{id,jdbcType=INTEGER}, #{pid,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{component,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR}, 
      #{sort,jdbcType=INTEGER}, #{isShow,jdbcType=CHAR}, #{isLeaf,jdbcType=CHAR}, #{state,jdbcType=SMALLINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.restfulapi.bean.ge.Rule" >
    insert into lin_rule
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="pid != null" >
        pid,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="component != null" >
        component,
      </if>
      <if test="icon != null" >
        icon,
      </if>
      <if test="sort != null" >
        sort,
      </if>
      <if test="isShow != null" >
        is_show,
      </if>
      <if test="isLeaf != null" >
        is_leaf,
      </if>
      <if test="state != null" >
        state,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="pid != null" >
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        #{component,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        #{isShow,jdbcType=CHAR},
      </if>
      <if test="isLeaf != null" >
        #{isLeaf,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.restfulapi.bean.ge.RuleExample" resultType="java.lang.Integer" >
    select count(*) from lin_rule
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update lin_rule
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null" >
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.component != null" >
        component = #{record.component,jdbcType=VARCHAR},
      </if>
      <if test="record.icon != null" >
        icon = #{record.icon,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null" >
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.isShow != null" >
        is_show = #{record.isShow,jdbcType=CHAR},
      </if>
      <if test="record.isLeaf != null" >
        is_leaf = #{record.isLeaf,jdbcType=CHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update lin_rule
    set id = #{record.id,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      component = #{record.component,jdbcType=VARCHAR},
      icon = #{record.icon,jdbcType=VARCHAR},
      sort = #{record.sort,jdbcType=INTEGER},
      is_show = #{record.isShow,jdbcType=CHAR},
      is_leaf = #{record.isLeaf,jdbcType=CHAR},
      state = #{record.state,jdbcType=SMALLINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.restfulapi.bean.ge.Rule" >
    update lin_rule
    <set >
      <if test="pid != null" >
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="component != null" >
        component = #{component,jdbcType=VARCHAR},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="isShow != null" >
        is_show = #{isShow,jdbcType=CHAR},
      </if>
      <if test="isLeaf != null" >
        is_leaf = #{isLeaf,jdbcType=CHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.restfulapi.bean.ge.Rule" >
    update lin_rule
    set pid = #{pid,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      component = #{component,jdbcType=VARCHAR},
      icon = #{icon,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=INTEGER},
      is_show = #{isShow,jdbcType=CHAR},
      is_leaf = #{isLeaf,jdbcType=CHAR},
      state = #{state,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>